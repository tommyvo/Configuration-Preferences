" Invoke vim-plug
" Install via:
"
" curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"
call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'briancollins/vim-jst'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'ervandew/supertab'
Plug 'mileszs/ack.vim'
Plug 'mtscout6/vim-cjsx'
Plug 'pangloss/vim-javascript'
Plug 'preservim/nerdtree'
Plug 'skammer/vim-css-color'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rails'
Plug 'vim-airline/vim-airline'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/hexHighlight.vim'
Plug 'Xuyuanp/nerdtree-git-plugin'

call plug#end()

" Create ~/.vim/tmp if it doesn't exist, and set the vim working directory there
silent !mkdir -p ~/.vim/tmp
set directory^=$HOME/.vim/tmp//

" VIM specific settings
set nowrap
set mouse=a
set number
syntax on
filetype plugin indent on
filetype on
filetype indent on
set spelllang=en
set spell

" Auto-commands
autocmd FileType ruby setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType eruby setlocal expandtab shiftwidth=2 tabstop=2

" Use ag for ctrlp.vim
if executable('ag')
  " Use ag over grep
  let g:ackprg = 'ag --vimgrep'
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" For vim-gitgutter
set updatetime=100
highlight SignColumn guibg=0 ctermbg=0
highlight GitGutterAdd guifg=#009900 ctermfg=2
highlight GitGutterChange guifg=#bbbb00 ctermfg=3
highlight GitGutterDelete guifg=#ff2222 ctermfg=1

" For NERDTree
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeShowHidden = 1
" autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" This sets a buffer at line 80, and will automatically put new lines for
" anything that goes past line 80.
let &colorcolumn=join(range(81,81),",")
highlight ColorColumn ctermbg=235
set tw=80
set ruler

" Key-maps
nnoremap <C-a> <Home>
nnoremap <C-e> <End>
nnoremap <silent> <C-n> :NERDTreeToggle<CR>
nnoremap <silent> <C-b> :NERDTreeFind<CR>
cnoreabbrev Ack Ack!
nnoremap <C-f> :Ack!<Space>
